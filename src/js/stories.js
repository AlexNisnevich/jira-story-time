// Generated by CoffeeScript 1.7.1
(function() {
  window.JiraStoryTime = window.JiraStoryTime || {};

  window.JiraStoryTime.Stories = {
    fetchStories: function() {
      var params;
      params = window.JiraStoryTime.Util.deparam(location.href.split("?")[1]);
      this.rapidView = params["rapidView"];
      return $.ajax({
        url: "/rest/greenhopper/1.0/xboard/plan/backlog/data.json?rapidViewId=" + this.rapidView,
        context: document.body
      }).done(this.parseStories);
    },
    parseStories: function(response) {
      var backlog_stories;
      window.JiraStoryTime.Stories.current_stories = $.map(response.sprints, function(sprint) {
        if (sprint.state === "ACTIVE") {
          return sprint.issuesIds;
        } else {
          return null;
        }
      });
      backlog_stories = {};
      $.map($.grep(response.issues, function(v) {
        return v.typeName === "Story";
      }), function(s) {
        backlog_stories[s.key] = new window.JiraStoryTime.Story(s);
      });
      window.JiraStoryTime.Stories.backlog_stories = backlog_stories;
    },
    epics: [],
    epicColor: function(epic) {
      var color;
      color = $.inArray(epic, window.JiraStoryTime.Stories.epics);
      if (color < 0) {
        color = this.addEpic(epic);
      }
      return color;
    },
    addEpic: function(epic) {
      var children, color, dom;
      color = window.JiraStoryTime.Stories.epics.length;
      window.JiraStoryTime.Stories.epics.push((epic === "None" ? "" : epic));
      $("#story_board_epics").append(window.JiraStoryTime.Templates.boardEpic);
      children = $("#story_board_epics").children();
      dom = children[children.length - 1];
      $(dom).find(".epic-name").html(epic);
      dom.setAttribute("id", "epic-" + color);
      $(dom).addClass("epic-color-" + color);
      return color;
    },
    updateEpics: function() {
      var epicPoints;
      epicPoints = {};
      $.map(this.backlog_stories, function(s) {
        epicPoints[s.epicColor || 0] = (epicPoints[s.epicColor || 0] || 0) + parseInt(s.points || 0);
      });
      $.map(epicPoints, function(v, k) {
        $("#epic-" + k).find(".story-points").html(v);
      });
    }
  };

}).call(this);
